# Generated by Django 5.0.14 on 2025-09-18 15:19

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('claims', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('LOW_BALANCE', 'Low Balance'), ('FRAUD_SUSPECT', 'Fraud Suspect'), ('SCHEME_ABUSE', 'Scheme Abuse')], max_length=32)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('CRITICAL', 'Critical')], default='WARNING', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='claims.patient')),
            ],
        ),
        migrations.CreateModel(
            name='EDIValidationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=100, unique=True)),
                ('rule_type', models.CharField(choices=[('REQUIRED_SEGMENT', 'Required Segment'), ('REQUIRED_ELEMENT', 'Required Element'), ('FORMAT_VALIDATION', 'Format Validation'), ('CODE_VALIDATION', 'Code Validation'), ('CROSS_REFERENCE', 'Cross Reference')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('segment_id', models.CharField(blank=True, help_text='EDI segment identifier (e.g., ISA, GS, ST)', max_length=3)),
                ('element_position', models.PositiveIntegerField(blank=True, help_text='Element position within segment', null=True)),
                ('element_name', models.CharField(blank=True, help_text='Name of the element being validated', max_length=50)),
                ('required', models.BooleanField(default=False)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('valid_codes', models.JSONField(blank=True, help_text='List of valid codes for this element', null=True)),
                ('regex_pattern', models.CharField(blank=True, help_text='Regex pattern for validation', max_length=255)),
                ('error_code', models.CharField(help_text='Error code to return on validation failure', max_length=10)),
                ('error_message', models.TextField(help_text='Error message for validation failure')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['rule_name'],
                'indexes': [models.Index(fields=['rule_type', 'is_active'], name='core_edival_rule_ty_f14b0d_idx'), models.Index(fields=['segment_id', 'is_active'], name='core_edival_segment_f3a8e0_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text="Setting key (e.g., 'preauth_threshold')", max_length=100, unique=True)),
                ('value', models.TextField(help_text='Setting value')),
                ('value_type', models.CharField(choices=[('STRING', 'String'), ('INTEGER', 'Integer'), ('DECIMAL', 'Decimal'), ('BOOLEAN', 'Boolean'), ('JSON', 'JSON')], default='STRING', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the setting')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='EDITransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(help_text='Unique EDI transaction identifier', max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('CLAIM_SUBMISSION', 'Claim Submission (837)'), ('CLAIM_STATUS', 'Claim Status Inquiry (276)'), ('PAYMENT_ADVICE', 'Payment/Remittance Advice (835)'), ('ELIGIBILITY', 'Eligibility Inquiry (270)'), ('ENROLLMENT', 'Enrollment/Disenrollment (834)')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('ERROR', 'Error')], default='PENDING', max_length=20)),
                ('sender_id', models.CharField(help_text='ISA sender ID', max_length=15)),
                ('receiver_id', models.CharField(help_text='ISA receiver ID', max_length=15)),
                ('x12_content', models.TextField(help_text='Original X12 EDI content')),
                ('parsed_data', models.JSONField(blank=True, help_text='Parsed EDI data structure', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('response_received_at', models.DateTimeField(blank=True, null=True)),
                ('response_transaction_id', models.CharField(blank=True, help_text='Response transaction ID', max_length=50)),
                ('response_content', models.TextField(blank=True, help_text='EDI response content')),
                ('response_parsed_data', models.JSONField(blank=True, help_text='Parsed response data', null=True)),
                ('error_code', models.CharField(blank=True, help_text='EDI error code', max_length=10)),
                ('error_message', models.TextField(blank=True, help_text='Error description')),
                ('validation_errors', models.JSONField(blank=True, help_text='Detailed validation errors', null=True)),
                ('control_number', models.CharField(blank=True, help_text='ISA control number', max_length=9)),
                ('group_control_number', models.CharField(blank=True, help_text='GS control number', max_length=9)),
                ('segment_count', models.PositiveIntegerField(default=0, help_text='Number of EDI segments')),
                ('claim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edi_transactions', to='claims.claim')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edi_transactions', to='claims.patient')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edi_transactions', to='accounts.providerprofile')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['transaction_id'], name='core_editra_transac_c12f49_idx'), models.Index(fields=['status', 'submitted_at'], name='core_editra_status_a27d8c_idx'), models.Index(fields=['provider', 'status'], name='core_editra_provide_17344e_idx'), models.Index(fields=['transaction_type', 'status'], name='core_editra_transac_c52343_idx')],
            },
        ),
        migrations.CreateModel(
            name='MemberDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=core.models.member_document_path)),
                ('doc_type', models.CharField(choices=[('ID', 'Identity Document'), ('ADDRESS', 'Proof of Address'), ('CARD', 'Medical Aid Card'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='claims.patient')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_member_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['patient', 'created_at'], name='core_member_patient_3ffedf_idx')],
            },
        ),
        migrations.CreateModel(
            name='MemberMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('body', models.TextField()),
                ('direction', models.CharField(choices=[('TO_MEMBER', 'To Member'), ('FROM_MEMBER', 'From Member')], default='TO_MEMBER', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='claims.patient')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_member_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['patient', 'created_at'], name='core_member_patient_d7fdfe_idx')],
            },
        ),
    ]
