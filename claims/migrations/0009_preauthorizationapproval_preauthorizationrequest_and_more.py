# Generated by Django 5.2.5 on 2025-09-17 13:42

import core.encryption
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('claims', '0008_encrypt_existing_phi_data'),
        ('schemes', '0005_update_limit_count_default'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PreAuthorizationApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_type', models.CharField(choices=[('FULL', 'Full Approval'), ('PARTIAL', 'Partial Approval'), ('CONDITIONAL', 'Conditional Approval')], default='FULL', max_length=20)),
                ('approved_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_visits', models.PositiveIntegerField(blank=True, help_text='Maximum number of visits allowed', null=True)),
                ('validity_period_days', models.PositiveIntegerField(default=30, help_text='How many days approval is valid')),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='Specific conditions for approval')),
                ('exclusions', models.JSONField(blank=True, default=dict, help_text='Services/procedures excluded from approval')),
                ('requires_followup', models.BooleanField(default=False)),
                ('followup_notes', core.encryption.EncryptedTextField(blank=True, help_text='Follow-up requirements (encrypted)')),
                ('approved_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approval_reference', models.CharField(editable=False, max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreAuthorizationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('request_type', models.CharField(choices=[('INPATIENT', 'Inpatient Admission'), ('OUTPATIENT', 'Outpatient Procedure'), ('SURGERY', 'Surgical Procedure'), ('SPECIALIST', 'Specialist Consultation'), ('DIAGNOSTIC', 'Diagnostic Procedure'), ('MEDICATION', 'High-Cost Medication'), ('OTHER', 'Other')], max_length=20)),
                ('priority', models.CharField(choices=[('ROUTINE', 'Routine'), ('URGENT', 'Urgent'), ('EMERGENCY', 'Emergency')], default='ROUTINE', max_length=10)),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date_requested', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_of_service', models.DateField(help_text='Proposed date of service')),
                ('requested_validity_days', models.PositiveIntegerField(default=30, help_text='How many days approval should be valid')),
                ('diagnosis', core.encryption.EncryptedTextField(help_text='Diagnosis requiring treatment (encrypted PHI)')),
                ('proposed_treatment', core.encryption.EncryptedTextField(help_text='Proposed treatment/procedure (encrypted PHI)')),
                ('clinical_notes', core.encryption.EncryptedTextField(blank=True, help_text='Additional clinical notes (encrypted PHI)')),
                ('supporting_documents', models.JSONField(blank=True, default=dict, help_text='URLs or references to supporting documents')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('approval_notes', core.encryption.EncryptedTextField(blank=True, help_text='Approval conditions/notes (encrypted)')),
                ('approval_expiry', models.DateField(blank=True, null=True)),
                ('rejection_reason', core.encryption.EncryptedTextField(blank=True, help_text='Rejection reason (encrypted)')),
                ('rejection_date', models.DateTimeField(blank=True, null=True)),
                ('auto_approved', models.BooleanField(default=False)),
                ('approval_rule_applied', models.CharField(blank=True, help_text='Name of auto-approval rule applied', max_length=100)),
            ],
            options={
                'ordering': ['-date_requested'],
            },
        ),
        migrations.CreateModel(
            name='PreAuthorizationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('COST_THRESHOLD', 'Cost Threshold'), ('SERVICE_TYPE', 'Service Type'), ('PROVIDER_TIER', 'Provider Tier'), ('PATIENT_HISTORY', 'Patient History'), ('DIAGNOSIS_BASED', 'Diagnosis Based'), ('COMPOSITE', 'Composite Rule')], max_length=20)),
                ('action', models.CharField(choices=[('AUTO_APPROVE', 'Auto Approve'), ('AUTO_REJECT', 'Auto Reject'), ('ESCALATE', 'Escalate for Review'), ('REQUIRE_DOCUMENTATION', 'Require Additional Documentation')], default='ESCALATE', max_length=25)),
                ('conditions', models.JSONField(default=dict, help_text='Rule conditions in JSON format')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=100, help_text='Lower number = higher priority')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.RemoveField(
            model_name='preauthorization',
            name='patient',
        ),
        migrations.RemoveField(
            model_name='preauthorization',
            name='provider',
        ),
        migrations.RemoveField(
            model_name='preauthorization',
            name='reviewed_by',
        ),
        migrations.RemoveField(
            model_name='preauthorization',
            name='service_type',
        ),
        migrations.RemoveIndex(
            model_name='claim',
            name='claims_clai_patient_14fad6_idx',
        ),
        migrations.RemoveIndex(
            model_name='claim',
            name='claims_clai_provide_bc3295_idx',
        ),
        migrations.RemoveIndex(
            model_name='claim',
            name='claims_clai_date_of_4caa6f_idx',
        ),
        migrations.RemoveField(
            model_name='claim',
            name='rejection_date',
        ),
        migrations.RemoveField(
            model_name='claim',
            name='rejection_reason',
        ),
        migrations.AddField(
            model_name='preauthorizationapproval',
            name='approved_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preauth_approvals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='preauthorizationrequest',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preauth_requests', to='claims.patient'),
        ),
        migrations.AddField(
            model_name='preauthorizationrequest',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='processed_preauths', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='preauthorizationrequest',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preauth_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='preauthorizationrequest',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preauth_requests', to='schemes.benefittype'),
        ),
        migrations.AddField(
            model_name='preauthorizationapproval',
            name='preauth_request',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='approval_details', to='claims.preauthorizationrequest'),
        ),
        migrations.AddField(
            model_name='preauthorizationrule',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preauth_rules', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='PreAuthorization',
        ),
        migrations.AddIndex(
            model_name='preauthorizationrequest',
            index=models.Index(fields=['patient', 'status', 'date_requested'], name='claims_prea_patient_e7917d_idx'),
        ),
        migrations.AddIndex(
            model_name='preauthorizationrequest',
            index=models.Index(fields=['provider', 'status', 'date_requested'], name='claims_prea_provide_42c16c_idx'),
        ),
        migrations.AddIndex(
            model_name='preauthorizationrequest',
            index=models.Index(fields=['request_number'], name='claims_prea_request_3e1877_idx'),
        ),
        migrations.AddIndex(
            model_name='preauthorizationrequest',
            index=models.Index(fields=['status', 'priority', 'date_requested'], name='claims_prea_status_1f822b_idx'),
        ),
    ]
