# Generated by Django 5.2.5 on 2025-09-18 09:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0009_providernetworkmembership_credentialingdocument_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CredentialingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('facility_type', models.CharField(blank=True, choices=[('HOSPITAL', 'Hospital'), ('CLINIC', 'Clinic'), ('PHARMACY', 'Pharmacy'), ('LAB', 'Laboratory'), ('IMAGING', 'Imaging Center')], max_length=20)),
                ('required_documents', models.JSONField(default=list, help_text='List of required document types')),
                ('validation_rules', models.JSONField(default=dict, help_text='Validation rules for each document type')),
                ('renewal_period_months', models.PositiveIntegerField(default=12, help_text='Months between renewals')),
                ('renewal_notice_days', models.PositiveIntegerField(default=60, help_text='Days before expiry to send renewal notice')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credentialing_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('notification_type', models.CharField(choices=[('CLAIM_STATUS_UPDATE', 'Claim Status Update'), ('CREDENTIALING_UPDATE', 'Credentialing Update'), ('DOCUMENT_REVIEWED', 'Document Reviewed'), ('MEMBERSHIP_EXPIRING', 'Membership Expiring'), ('PAYMENT_PROCESSED', 'Payment Processed'), ('SYSTEM_MAINTENANCE', 'System Maintenance'), ('GENERAL_ANNOUNCEMENT', 'General Announcement')], max_length=30)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('html_message', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('IN_APP', 'In-App Notification'), ('SMS', 'SMS'), ('PUSH', 'Push Notification')], default='IN_APP', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('READ', 'Read')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('related_claim_id', models.IntegerField(blank=True, null=True)),
                ('related_membership_id', models.IntegerField(blank=True, null=True)),
                ('related_document_id', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional notification data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='For scheduled notifications', null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('message', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='accounts.notification')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('claim_updates_enabled', models.BooleanField(default=True)),
                ('credentialing_updates_enabled', models.BooleanField(default=True)),
                ('payment_updates_enabled', models.BooleanField(default=True)),
                ('system_announcements_enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start of quiet hours (HH:MM)', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End of quiet hours (HH:MM)', null=True)),
                ('digest_frequency', models.CharField(choices=[('NONE', 'No Digest'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly')], default='NONE', help_text='How often to send notification digests', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('CLAIM_STATUS_UPDATE', 'Claim Status Update'), ('CREDENTIALING_UPDATE', 'Credentialing Update'), ('DOCUMENT_REVIEWED', 'Document Reviewed'), ('MEMBERSHIP_EXPIRING', 'Membership Expiring'), ('PAYMENT_PROCESSED', 'Payment Processed'), ('SYSTEM_MAINTENANCE', 'System Maintenance'), ('GENERAL_ANNOUNCEMENT', 'General Announcement')], max_length=30)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('IN_APP', 'In-App Notification'), ('SMS', 'SMS'), ('PUSH', 'Push Notification')], max_length=20)),
                ('subject_template', models.CharField(blank=True, help_text='Email subject template', max_length=255)),
                ('body_template', models.TextField(help_text='Notification body template')),
                ('html_template', models.TextField(blank=True, help_text='HTML email template')),
                ('template_variables', models.JSONField(default=dict, help_text='Available template variables')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('notification_type', 'channel')},
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='template_used',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='CredentialingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_REVIEW', 'In Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('ESCALATED', 'Escalated')], default='PENDING', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('validation_score', models.PositiveIntegerField(default=0, help_text='Automated validation score (0-100)')),
                ('review_notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('auto_checks_passed', models.JSONField(default=dict, help_text='Results of automated validation checks')),
                ('manual_checks_required', models.JSONField(default=list, help_text='Manual checks that need attention')),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('escalated_at', models.DateTimeField(blank=True, null=True)),
                ('escalation_reason', models.TextField(blank=True)),
                ('review_history', models.JSONField(default=list, help_text='History of review actions')),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='accounts.credentialingdocument')),
                ('escalated_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escalated_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_at', '-due_date'],
                'indexes': [models.Index(fields=['status', 'priority', 'due_date'], name='accounts_cr_status_358ff0_idx'), models.Index(fields=['reviewer', 'status'], name='accounts_cr_reviewe_44c706_idx')],
            },
        ),
        migrations.CreateModel(
            name='CredentialingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('DOCUMENT_VALIDITY', 'Document Validity Check'), ('LICENSE_VERIFICATION', 'License Verification'), ('CONTRACT_VALIDATION', 'Contract Validation'), ('INSURANCE_CHECK', 'Insurance Coverage Check'), ('COMPLIANCE_REVIEW', 'Compliance Review')], max_length=30)),
                ('doc_type', models.CharField(choices=[('LICENSE', 'License'), ('CONTRACT', 'Contract'), ('INSURANCE', 'Insurance'), ('OTHER', 'Other')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('min_file_size', models.PositiveIntegerField(blank=True, help_text='Minimum file size in bytes', null=True)),
                ('max_file_size', models.PositiveIntegerField(blank=True, help_text='Maximum file size in bytes', null=True)),
                ('allowed_extensions', models.JSONField(default=list, help_text='Allowed file extensions')),
                ('required_fields', models.JSONField(default=list, help_text='Required fields to check')),
                ('content_patterns', models.JSONField(default=list, help_text='Regex patterns to match in document content')),
                ('expiry_check_days', models.PositiveIntegerField(default=30, help_text='Days before expiry to flag')),
                ('action', models.CharField(choices=[('AUTO_APPROVE', 'Auto Approve'), ('AUTO_REJECT', 'Auto Reject'), ('REQUIRE_REVIEW', 'Require Manual Review'), ('ESCALATE', 'Escalate to Senior Review')], default='REQUIRE_REVIEW', max_length=20)),
                ('auto_approve_score', models.PositiveIntegerField(default=0, help_text='Minimum score for auto-approval (0-100)')),
                ('escalation_threshold', models.PositiveIntegerField(default=90, help_text='Days without action before escalation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credentialing_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['rule_type', 'doc_type', 'is_active'], name='accounts_cr_rule_ty_15b247_idx')],
            },
        ),
        migrations.CreateModel(
            name='DocumentExpiryAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('EXPIRY_WARNING', 'Expiry Warning'), ('EXPIRY_CRITICAL', 'Expiry Critical'), ('RENEWAL_DUE', 'Renewal Due'), ('EXPIRED', 'Expired')], max_length=20)),
                ('days_until_expiry', models.IntegerField()),
                ('message', models.TextField()),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expiry_alerts', to='accounts.credentialingdocument')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['alert_type', 'is_acknowledged', 'created_at'], name='accounts_do_alert_t_0f9be7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status', 'created_at'], name='accounts_no_recipie_b9b197_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'status'], name='accounts_no_notific_e98fd7_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_for', 'status'], name='accounts_no_schedul_8f4928_idx'),
        ),
    ]
