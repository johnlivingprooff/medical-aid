# Generated by Django 5.0.14 on 2025-09-18 15:19

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('claims', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BenefitCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the benefit category', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of what this category includes')),
                ('subscription_required', models.BooleanField(default=True, help_text='Whether this benefit requires an active subscription')),
                ('access_rules', models.JSONField(blank=True, default=dict, help_text='Rules for accessing benefits in this category')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Benefit Category',
                'verbose_name_plural': 'Benefit Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BenefitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchemeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='MemberSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_type', models.CharField(choices=[('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], default='MONTHLY', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('CANCELLED', 'Cancelled'), ('SUSPENDED', 'Suspended'), ('EXPIRED', 'Expired')], default='ACTIVE', max_length=20)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField()),
                ('last_billing_date', models.DateField(blank=True, null=True)),
                ('next_billing_date', models.DateField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('is_prorated', models.BooleanField(default=False)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, help_text='Total amount paid for this subscription', max_digits=12)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=0, help_text='Current outstanding balance', max_digits=12)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('payment_type', models.CharField(choices=[('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('BANK_ACCOUNT', 'Bank Account'), ('PAYPAL', 'PayPal'), ('OTHER', 'Other')], default='CREDIT_CARD', max_length=20)),
                ('card_number_masked', models.CharField(blank=True, help_text='Last 4 digits of card number', max_length=20)),
                ('card_holder_name', models.CharField(blank=True, max_length=100)),
                ('expiry_month', models.IntegerField(blank=True, null=True)),
                ('expiry_year', models.IntegerField(blank=True, null=True)),
                ('account_number_masked', models.CharField(blank=True, help_text='Last 4 digits of account number', max_length=20)),
                ('routing_number', models.CharField(blank=True, max_length=20)),
                ('paypal_email', models.EmailField(blank=True, max_length=254)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='claims.patient')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text='Unique invoice identifier', max_length=50, unique=True)),
                ('billing_start_date', models.DateField()),
                ('billing_end_date', models.DateField()),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Amount before tax/discounts', max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, help_text='Tax amount', max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Discount amount', max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Final amount due', max_digits=12)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('issued_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='schemes.membersubscription')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(help_text='External payment processor ID', max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=12)),
                ('payment_method', models.CharField(choices=[('CREDIT_CARD', 'Credit Card'), ('BANK_TRANSFER', 'Bank Transfer'), ('PAYPAL', 'PayPal'), ('CASH', 'Cash'), ('OTHER', 'Other')], default='CREDIT_CARD', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, help_text='External transaction reference', max_length=100)),
                ('gateway_response', models.JSONField(blank=True, help_text='Raw response from payment gateway', null=True)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount refunded', max_digits=12)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('refund_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='schemes.invoice')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BillingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('INVOICE_CREATED', 'Invoice Created'), ('INVOICE_SENT', 'Invoice Sent'), ('PAYMENT_ATTEMPTED', 'Payment Attempted'), ('PAYMENT_COMPLETED', 'Payment Completed'), ('PAYMENT_FAILED', 'Payment Failed'), ('PAYMENT_REFUNDED', 'Payment Refunded'), ('SUBSCRIPTION_RENEWED', 'Subscription Renewed'), ('SUBSCRIPTION_CANCELLED', 'Subscription Cancelled'), ('BILLING_CYCLE_UPDATED', 'Billing Cycle Updated')], max_length=30)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount involved in the action', max_digits=12, null=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the action')),
                ('metadata', models.JSONField(blank=True, help_text='Additional data related to the action', null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_actions', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_history', to='schemes.invoice')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_history', to='schemes.membersubscription')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_history', to='schemes.payment')),
            ],
            options={
                'verbose_name': 'Billing History',
                'verbose_name_plural': 'Billing History',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('BANK_ACCOUNT', 'Bank Account'), ('PAYPAL', 'PayPal'), ('APPLE_PAY', 'Apple Pay'), ('GOOGLE_PAY', 'Google Pay')], max_length=20)),
                ('provider', models.CharField(choices=[('STRIPE', 'Stripe'), ('PAYPAL', 'PayPal'), ('PAYFAST', 'PayFast'), ('OTHER', 'Other')], default='STRIPE', max_length=20)),
                ('provider_payment_method_id', models.CharField(help_text='Payment method ID from payment provider', max_length=255)),
                ('last_four', models.CharField(help_text='Last 4 digits of card/account number', max_length=4)),
                ('expiry_month', models.PositiveIntegerField(blank=True, help_text='Card expiry month (1-12)', null=True)),
                ('expiry_year', models.PositiveIntegerField(blank=True, help_text='Card expiry year', null=True)),
                ('card_brand', models.CharField(blank=True, help_text='Card brand (Visa, Mastercard, etc.)', max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, help_text='Bank name for bank accounts', max_length=100, null=True)),
                ('account_holder_name', models.CharField(help_text='Name on the account/card', max_length=255)),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default payment method')),
                ('is_active', models.BooleanField(default=True, help_text='Is this payment method active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_payment_methods', to='claims.patient')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='schemes.paymentmethod'),
        ),
        migrations.CreateModel(
            name='SubscriptionTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('monthly_price', models.DecimalField(decimal_places=2, help_text='Monthly subscription price', max_digits=10)),
                ('yearly_price', models.DecimalField(decimal_places=2, help_text='Yearly subscription price (discounted)', max_digits=10)),
                ('max_dependents', models.PositiveIntegerField(default=0, help_text='Maximum number of dependents allowed (0 = unlimited)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False, help_text='Default tier for new members')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_tiers', to='schemes.schemecategory')),
            ],
            options={
                'verbose_name': 'Subscription Tier',
                'verbose_name_plural': 'Subscription Tiers',
                'ordering': ['scheme', 'sort_order', 'name'],
                'unique_together': {('scheme', 'name')},
            },
        ),
        migrations.AddField(
            model_name='membersubscription',
            name='tier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='schemes.subscriptiontier'),
        ),
        migrations.CreateModel(
            name='SchemeBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum coverage amount', max_digits=12, null=True)),
                ('coverage_limit_count', models.PositiveIntegerField(blank=True, default=1, help_text='Max number of uses in period', null=True)),
                ('coverage_period', models.CharField(choices=[('PER_VISIT', 'Per Visit'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly'), ('LIFETIME', 'Lifetime'), ('BENEFIT_YEAR', 'Benefit Year')], default='BENEFIT_YEAR', max_length=20)),
                ('deductible_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount patient pays before coverage kicks in', max_digits=12)),
                ('copayment_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of cost patient must pay', max_digits=5)),
                ('copayment_fixed', models.DecimalField(decimal_places=2, default=0, help_text='Fixed amount patient must pay per visit', max_digits=12)),
                ('requires_preauth', models.BooleanField(default=False, help_text='Requires pre-authorization before treatment')),
                ('preauth_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Amount above which pre-auth is required', max_digits=12, null=True)),
                ('waiting_period_days', models.PositiveIntegerField(default=0, help_text='Days to wait before benefit is active')),
                ('network_only', models.BooleanField(default=False, help_text='Only cover in-network providers')),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('benefit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheme_benefits', to='schemes.benefittype')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='schemes.schemecategory')),
            ],
            options={
                'indexes': [models.Index(fields=['scheme'], name='schemes_sch_scheme__bb2a18_idx'), models.Index(fields=['benefit_type'], name='schemes_sch_benefit_65ad75_idx'), models.Index(fields=['is_active'], name='schemes_sch_is_acti_f4d737_idx'), models.Index(fields=['effective_date'], name='schemes_sch_effecti_fbdb10_idx'), models.Index(fields=['expiry_date'], name='schemes_sch_expiry__f08bb4_idx'), models.Index(fields=['requires_preauth'], name='schemes_sch_require_e94d38_idx'), models.Index(fields=['network_only'], name='schemes_sch_network_5fbd60_idx'), models.Index(fields=['coverage_period'], name='schemes_sch_coverag_499738_idx'), models.Index(fields=['scheme', 'is_active'], name='schemes_sch_scheme__e789c4_idx'), models.Index(fields=['benefit_type', 'is_active'], name='schemes_sch_benefit_098318_idx'), models.Index(fields=['scheme', 'benefit_type', 'is_active'], name='schemes_sch_scheme__c361a8_idx')],
                'unique_together': {('scheme', 'benefit_type')},
            },
        ),
    ]
